{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAdd","useState","query","setQuery","isLoading","setIsLoading","isError","setIsError","setMovie","getMovieData","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","trim","movieData","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","e","App","setMovies","find","item","checkDublicate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41edcda9.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={\n            movie.imgUrl === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : movie.imgUrl\n          }\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const getMovieData = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    getMovie(query.trim())\n      .then(movieData => {\n        if ('Error' in movieData) {\n          setIsError(true);\n\n          return;\n        }\n\n        setMovie({\n          title: movieData.Title,\n          description: movieData.Plot,\n          imgUrl: movieData.Poster,\n          imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n          imdbId: movieData.imdbID,\n        });\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setIsError(false);\n  };\n\n  const handleAddingToTheList = () => {\n    if (movie) {\n      onAdd(movie);\n      setMovie(null);\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': isError,\n              })}\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!query}\n              onClick={e => getMovieData(e)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddingToTheList}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=76e24090';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const checkDublicate = (movie: Movie): Movie[] => {\n    return movies.find(item => item.imdbId === movie.imdbId)\n      ? movies\n      : [...movies, movie];\n  };\n\n  const addMovieToTheList = (movie: Movie) => {\n    setMovies(checkDublicate(movie));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovieToTheList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}